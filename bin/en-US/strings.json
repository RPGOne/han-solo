{
  "AcceptTeeEula": "(Y/N) Accept the Team Explorer Everywhere license agreement now?",
  "AccessDenied": "Access Denied",
  "AccessDeniedSettingRecoveryOption": "Access Denied while setting service recovery options.",
  "AddAgentFailed": "Failed to add the agent.  Try again or ctrl-c to quit",
  "AddBuildTag": "Add Build Tag",
  "AddDeploymentGroupTagsFlagDescription": "deployment group tags for agent? (Y/N)",
  "AgentAddedSuccessfully": "Successfully added the agent",
  "AgentExit": "Agent will exit shortly for update, should back online within 10 seconds.",
  "AgentIsNotConfigured": "Agent is not configured.",
  "AgentMachinePoolNameLabel": "agent pool",
  "AgentName": "agent name",
  "AgentReplaced": "Successfully replaced the agent",
  "AgentRunningBehindProxy": "Agent is running behind proxy server: '{0}'",
  "AgentVersion": "Current agent version: '{0}'",
  "AgentWithSameNameAlreadyExistInPool": "Pool {0} already contains an agent with name {1}.",
  "AlreadyConfiguredError": "Cannot configure the agent because it is already configured. To reconfigure the agent, run 'config.cmd remove' or './config.sh remove' first.",
  "ArgumentNeeded": "'{0}' has to be specified.",
  "ArtifactCommandNotFound": "##vso[artifact.{0}] is not a recognized command for Artifact command extension. Please reference documentaion (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "ArtifactDownloadFailed": "Failed to download the artifact from {0}.",
  "ArtifactLocationNotSupport": "Unsupport artifact location: {0}",
  "ArtifactLocationRequired": "Artifact location is required.",
  "ArtifactNameRequired": "Artifact Name is required.",
  "ArtifactTypeRequired": "Artifact Type is required.",
  "AssociateArtifact": "Associate Artifact",
  "AssociateArtifactWithBuild": "Associated artifact {0} with build {1}",
  "AttachFileNotExist": "Can't attach (type:{0} name:{1}) file: {2}. File does not exist.",
  "AttachmentExceededMaximum": "Skipping attachment as it exceeded the maximum allowed size: {0}",
  "AttemptRemoveCredFromConfig": "An unsuccessful attempt was made using git command line to remove \"http.extraheader\" from the git config. Attempting to modify the git config file directly to remove the credential.",
  "AuthenticationType": "authentication type",
  "BuildCommandNotFound": "##vso[build.{0}] is not a recognized command for Build command extension. Please reference documentaion (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "BuildDirLastUseTIme": "The last time build directory '{0}' been used is: {1}",
  "BuildNumberRequired": "Build number is required.",
  "BuildTagAddFailed": "Build tag '{0}' was not added successfully.",
  "BuildTagRequired": "Build tag is required.",
  "BuildTagsForBuild": "Build '{0}' has following tags now: {1}",
  "CannotChangeParentTimelineRecord": "Can't change parent timeline record of an existing timeline record.",
  "CannotFindHostName": "Cannot find VSTS account name from server url: '{0}'",
  "CanNotFindService": "Cannot find service {0}",
  "CanNotGrantPermission": "Cannot grant LogonAsService permission to the user {0}",
  "CanNotStartService": "Cannot start the service. Check the logs for more details.",
  "CanNotStopService": "Cannot stop the service {0} in a timely fashion.",
  "CannotUploadFile": "Cannot upload file because file location is not specified.",
  "CannotUploadSummary": "Cannot upload summary file, summary file location is not specified.",
  "ClassDirectoriesNotSpecifiedForMultiModule": "Class directories field is not specified. Class files directories field is required for a multi module project to generate code coverage reports.",
  "Cleanup": "Post Job Cleanup",
  "ClockSkewStopRetry": "Stopped retrying OAuth token request exception after {0} seconds.",
  "CodeCoverageBuildFileIsEmpty": "Failed to enable code coverage because the build file provided '{0}' is empty. Provide a valid build file and try again.",
  "CodeCoverageCommandNotFound": "##vso[codecoverage.{0}] is not a recognized command for Task command extension. Please reference documentaion (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "CodeCoverageDataIsNull": "No coverage data found. Check the build errors/warnings for more details.",
  "CodeCoverageEnabled": "Successfully enabled '{0}' code coverage for '{1}'",
  "CodeCoveragePublishIsValidOnlyForBuild": "Publishing code coverage works only for 'build'.",
  "CollectionName": "Collection Name",
  "CommandKeywordDetected": "'{0}' contains logging command keyword '##vso', but it's not a legal command. Please reference documentaion to fix any potentially syntax error (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "CommandNotFound": "Can't find command extension for ##vso[{0}.command]. Please reference documentation (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "CommandNotSupported": "{0} commands are not supported for {1} flow. Please reference documentation (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "CommandProcessFailed": "Unable to process command '{0}' successfully. Please reference documentation (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "ConnectingToServer": "Connecting to server ...",
  "ConnectSectionHeader": "Connect",
  "ConnectToServer": "Connecting to the server.",
  "CouldNotRemoveService": "Could not delete service '{0}'",
  "CurrentUTC": "Current UTC: {0}",
  "CustomLogDoesNotExist": "Log file path is not provided or file doesn't exist: '{0}'",
  "CustomMarkDownSummaryDoesNotExist": "Markdown summary file path is not provided or file doesn't exist: '{0}'",
  "DeleteGCTrackingFile": "Delete gc tracking file after delete '{0}'",
  "DeleteUnusedBuildDir": "Delete unused build directories",
  "Deleting": "Deleting: {0}",
  "DeletingCredentials": "Removing .credentials",
  "DeletingSettings": "Removing .agent",
  "DeploymentGroupName": "Deployment Group name",
  "DeploymentGroupNotFound": "Deployment Group not found: '{0}'",
  "DeploymentGroupTags": "Comma separated list of tags (e.g tag1,tag2)",
  "DeploymentGroupTagsAddedMsg": "Tags added successfully",
  "DeploymentMachineWithSameNameAlreadyExistInDeploymentGroup": "DeploymentGroup {0} already contains a machine with name {1}.",
  "DirectoryHierarchyUnauthorized": "Permission to read the directory contents is required for '{0}' and each directory up the hierarchy. {1}",
  "DirectoryIsEmptyForArtifact": "Directory '{0}' is empty. Nothing will be added to build artifact '{1}'.",
  "DirectoryNotFound": "Directory not found: '{0}'",
  "DirExpireLimit": "Directory expiration limit: {0} days.",
  "DiscoverBuildDir": "Discover stale build directories that haven't been used for more than {0} days.",
  "DownloadAgent": "Downloading {0} agent",
  "DownloadArtifacts": "Download Artifacts",
  "DownloadArtifactsFailed": "Downloading artifacts failed: {0}",
  "DownloadingTask0": "Downloading task: {0}",
  "EnsureJobFinished": "Waiting for current job finish running.",
  "EnsureTasksExist": "Download all required tasks.",
  "EnterValidValueFor0": "Enter a valid value for {0}.",
  "ErrorDuringBuildGC": "Unable discover garbage based on '{0}'. Try it next time.",
  "ErrorDuringBuildGCDelete": "Unable finish GC based on '{0}'. Try it next time.",
  "ErrorOccurred": "An error occurred: {0}",
  "ErrorOccurredWhilePublishingCCFiles": "Error occurred while publishing code coverage files. Error: {0}",
  "EulasSectionHeader": "End User License Agreements",
  "EvaluateTrackingFile": "Evaluate BuildDirectory tracking file: {0}",
  "Failed": "Failed: ",
  "FailedCleaningupRMArtifactDirectory": "Failed to cleanup Release's artifact directory '{0}'.",
  "FailedDeletingTempDirectory0Message1": "Failed to delete temporary directory '{0}'. {1}",
  "FailedToAddTags": "Failed to apply tags to agent. Try again or ctrl-c to quit. Alternatively you may go to deployment group web page to add tags",
  "FailedToConnect": "Failed to connect.  Try again or ctrl-c to quit",
  "FailedToDeleteTempScript": "Failed to delete temporary inline script file '{0}'. {1}",
  "FailedToFindDeploymentGroup": "Failed to find deployment group. Try again or ctrl-c to quit",
  "FailedToFindPool": "Failed to find pool name. Try again or ctrl-c to quit",
  "FailedToLockServiceDB": "Failed to Lock Service Database for Write",
  "FailedToOpenSCM": "Failed to Open Service Control Manager",
  "FailedToOpenSCManager": "Failed to Open Service Control Manager",
  "FailedToPublishTestResults": "Failed to publish test results: {0}",
  "FailedToReadFile": "Failed to read {0}. Error : {1}.",
  "FailedToReplaceAgent": "Failed to replace the agent.  Try again or ctrl-c to quit",
  "FailToRemoveGitConfig": "Unable to remove \"{0}\" from the git config. To remove the credential, execute \"git config --unset-all {0}\" from the repository root \"{1}\".",
  "FileContainerUploadFailed": "Unable to copy file to server StatusCode={0}: {1}. Source file path: {2}. Target server path: {3}",
  "FileDoesNotExist": "File '{0}' does not exist or is not accessible.",
  "FileNotFound": "File not found: '{0}'",
  "FileUploadCancelled": "File upload has been cancelled during upload file: '{0}'.",
  "FileUploadDetailTrace": "Detail upload trace for file that fail to upload: {0}",
  "FileUploadFailed": "Fail to upload '{0}' due to '{1}'.",
  "FileUploadFailedAfterRetry": "File upload failed even after retry.",
  "FileUploadFailedRetryLater": "{0} files failed to upload, retry these files after a minute.",
  "FileUploadFinish": "File: '{0}' took {1} milliseconds to finish upload",
  "FileUploadProgress": "Total file: {0} ---- Processed file: {1} ({2}%)",
  "FileUploadProgressDetail": "Uploading '{0}' ({1}%)",
  "FileUploadRetry": "Start retry {0} failed files upload.",
  "FileUploadRetryInSecond": "Retry file upload after {0} seconds.",
  "FileUploadRetrySucceed": "File upload succeed after retry.",
  "FileUploadSucceed": "File upload succeed.",
  "FinishMaintenance": "Maintenance finished: {0}",
  "GCBuildDir": "Delete orphan and stale build directory.",
  "GCBuildDirNotEnabled": "Delete orphan and stale build directory option is not enabled.",
  "GCDirIsEmpty": "No build directory need to be GC. '{0}' doesn't have any tracking file.",
  "GCDirNotExist": "No build directory need to be GC. '{0}' doesn't exist.",
  "GCOldFormatTrackingFile": "Mark tracking file '{0}' for GC, since it never been used.",
  "GCUnusedTrackingFile": "Mark tracking file '{0}' for GC, since it hasn't been used for {1} days.",
  "GenerateAndRunUpdateScript": "Generate and execute update script.",
  "GetSources": "Get Sources",
  "GroupDoesNotExists": "Group: {0} does not Exist",
  "InitializeJob": "Initialize Job",
  "InvalidBuildOrCoverageTool": "An internal error occurred. Details: Invalid build or code coverage tool provided. Build tool = '{0}'. Coverage tool = '{1}'. ",
  "InvalidBuildXml": "Invalid build xml '{0}'. Error '{1}' occured while parsing the file. Ensure the file provided is well-formed and try again.",
  "InvalidClassFilesDirectory": "Invalid input for 'Class Files Directory' field. It should not be a regular expression or a file path. 'Class Files Directory' accepts comma seperated list of class directories.",
  "InvalidClassFilter": "Class Inclusion/Exclusion filter '{0}' is invalid. Provide a valid filter and try again. Example : +:com.*,+:org.*",
  "InvalidCommandArg": "Command argument '{0}' contains one or more of the following invalid characters: \", \\r, \\n",
  "InvalidCommandResult": "Command doesn't have valid result value.",
  "InvalidCompletedDate": "Duration of each test run will be used for time calculation as, Maximum Completed Date {0} obtained from test results file is greater than Minimum Start Date {1}",
  "InvalidConfigFor0TerminatingUnattended": "Invalid configuration provided for {0}. Terminating unattended configuration.",
  "InvalidDateFormat": "Duration of each test run will be used for time calculation as, invalid date format obtained from results file: {0} (Start Date: {1}, Completed Date: {2}",
  "InvalidFileFormat": "Invalid file format.",
  "InvalidGroupName": "Invalid Group Name - {0}",
  "InvalidMember": "A new member could not be added to a local group because the member has the wrong account type. If you are configuring on a domain controller, built-in machine accounts cannot be added to local groups. You must use a domain user account instead",
  "InvalidResultFiles": "Invalid results file. Make sure the result format of the file '{0}' matches '{1}' test results format.",
  "InvalidSourceDirectory": "Unable to get source directory. Contact your administrator for more information.",
  "InvalidValueInXml": "Unable to retreive value for '{0}' from the summary file '{1}'. Verify the summary file is well-formed and try again.",
  "InvalidWindowsCredential": "Invalid windows credentials entered. Try again or ctrl-c to quit",
  "IsMultiModuleParameterNotAvailable": "Parameter IsMultiModule is not available. Considering the project as a single module project.",
  "JobCompleted": "{0:u}: Job {1} completed with result: {2}",
  "ListenerHelp": [
    "Visual Studio Team Services Agent",
    "Copyright (c) Microsoft Corporation",
    "",
    "Run the agent using the convenience cmd or shell script wrappers.",
    "",
    "Print agent version information:",
    "Win  : .\\config.cmd --version and config.cmd --commit",
    "Unix : ./config.sh --version and ./config.sh --commit",
    "",
    "Display command line help:",
    "Win  : .\\config.cmd --help",
    "Unix : ./config.sh --help",
    "",
    "Configure the agent and exit:",
    "Win  : .\\config.cmd [arguments] [options]",
    "Unix : ./config.sh [arguments] [options]",
    "",
    "Unconfigure the agent:",
    "Win  : .\\config.cmd remove",
    "Unix : ./config.sh remove",
    "",
    "Run agent interactively (must be configured):",
    "Win  : .\\run.cmd [arguments] [options]",
    "Unix : ./run.sh [arguments] [options]",
    "",
    "",
    "Configure Arguments:",
    "-----------------------------------------------------------------------------",
    "--url                  URL of the server.  Examples:",
    "                       https://myaccount.visualstudio.com or http://onprem:8080/tfs",
    "--auth                 Authentication type. Valid options are PAT (Personal Access Token),",
    "                       Negotiate (Kerberos or NTLM) and Integrated (Windows default credentials)",
    "--pool                 Pool name for agent to join",
    "--agent                Agent name",
    "--work                 Work directory where job data is stored.",
    "                       Defaults to _work under the root of the agent directory.",
    "                       Work directory is owned by a given agent and should not share between multiple agents.",
    "--windowslogonaccount  Windows logon account name if runasservice option is chosen (Only on Windows)",
    "--windowslogonpassword Windows logon account password if runasservice option is chosen (Only on Windows)",
    "",
    "",
    "Remove Arguments:",
    "-----------------------------------------------------------------------------",
    "--auth                 Authentication type. Valid options are PAT (Personal Access Token),",
    "                       Negotiate (Kerberos or NTLM) and Integrated (Windows default credentials)",
    "",
    "",
    "Options:",
    "-----------------------------------------------------------------------------",
    "--unattended     Unattended config. You will not be prompted.",
    "                 All answers must be supplied to the command line.",
    "--acceptteeeula  Accept TEE end user license agreement. (Only on Linux and OSX)",
    "--replace        Replace the agent in a pool. If another agent is listening",
    "                 by that name, or it will start failing with a conflict.",
    "--runasservice   Configure the agent as service. (Only on Windows, need administrator permission to configure windows service)",
    "",
    "",
    "Arguments by Auth Type:",
    "-----------------------------------------------------------------------------",
    "PAT:",
    "--token        Personal Access Token data. Best to paste value in.",
    "",
    "Negotiate:",
    "--username     domain\\username or UPN",
    "--password     windows account password",
    "",
    "Integrated: does not take any additional arguments",
    "",
    "",
    "Unattended configure and unconfigure examples:",
    "-----------------------------------------------------------------------------",
    "Remember to check return code when using unattended configuration",
    "Unattend configuration for VSTS with PAT authentication",
    "Win  : .\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth PAT --token <token> --pool default --agent myagent",
    "Unix : ./config.sh --unattended --acceptteeeula --url https://myaccount.visualstudio.com --auth PAT --token <token> --pool default --agent myagent",
    "",
    "Unattend configuration for on-premise TFS with integrated (windows) and (Linux/OSX) negotiate authentication",
    "Win  : .\\config.cmd --unattended --url http://mylocaltfsserver:8080/tfs --auth Integrated --pool default --agent myagent",
    "Unix : ./config.sh --unattended --acceptteeeula --url http://mylocaltfsserver:8080/tfs --auth Negotiate --username DOMAIN\\USER_NAME --password MyPassword --pool default --agent myagent",
    "",
    "Unattend configuration for VSTS with PAT authentication and replace existing agent with same agent name",
    "Win  : .\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth PAT --token <token> --pool default --agent myagent --replace",
    "Unix : ./config.sh --unattended --acceptteeeula --url https://myaccount.visualstudio.com --auth PAT --token <token> --pool default --agent myagent --replace",
    "",
    "Unattend configuration for VSTS with PAT authentication and specify agent work directory",
    "Win  : .\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth PAT --token <token> --pool default --agent myagent --work D:\\agent_work",
    "Unix : ./config.sh --unattended --acceptteeeula --url https://myaccount.visualstudio.com --auth PAT --token <token> --pool default --agent myagent --work usr/local/agent_work",
    "",
    "Unattend configuration for on-premise TFS with integrated authentication and configure agent as Windows service run as NetworkService",
    "Win  : .\\config.cmd --unattended --url http://mylocaltfsserver:8080/tfs --auth Integrated --pool default --agent myagent --runasservice",
    "",
    "Unattend configuration for on-premise TFS with integrated authentication and configure agent as Windows service run as a domain account",
    "Win  : .\\config.cmd --unattended --url http://mylocaltfsserver:8080/tfs --auth Integrated --pool default --agent myagent --runasservice --windowslogonaccount DOMAIN\\USER_NAME --windowslogonpassword MyPassword",
    "",
    "Unattend unconfiguration for VSTS with PAT authentication",
    "Win  : .\\config.cmd remove --unattended --auth PAT --token <token>",
    "Unix : ./config.sh remove --unattended --auth PAT --token <token>",
    "",
    "Unattend unconfiguration for on-premise TFS with integrated (windows) and (Linux/OSX) negotiate authentication",
    "Win  : .\\config.cmd remove --unattended --auth Integrated",
    "Unix : ./config.sh remove --unattended --auth Negotiate --username DOMAIN\\USER_NAME --password MyPassword",
    ""
  ],
  "ListenForJobs": "{0:u}: Listening for Jobs",
  "LocalClockSkewed": "The local machine's clock may be out of sync with the server time by more than five minutes. Please sync your clock with your domain or internet time and try again.",
  "LocalSystemAccountNotFound": "Cannot find local system account",
  "Maintenance": "Maintenance",
  "MemberDoesNotExists": "Member: {0} does not Exist",
  "MinimumNetFramework": ".NET Framework x64 4.5 or higher is required.",
  "MinimumNetFramework46": ".NET Framework x64 4.6 or higher is required.",
  "MinimumNetFrameworkTfvc": [
    ".NET Framework x64 4.6 or higher is not installed.",
    "",
    ".NET Framework x64 4.6 or higher is required to sync TFVC repositories. It is not required to sync Git repositories."
  ],
  "MinRequiredGitVersion": "Min required git version is '{0}', your git ('{1}') version is '{2}'",
  "MissingAgent": "The agent no longer exists on the server. Please reconfigure the agent.",
  "MissingAttachmentFile": "Cannot upload task attachment file, attachment file location is not specified or attachment file not exist on disk",
  "MissingAttachmentName": "Can't add task attachment, attachment name is not provided.",
  "MissingAttachmentType": "Can't add task attachment, attachment type is not provided.",
  "MissingConfig": "Cannot connect to server, because config files are missing. Skipping removing agent from the server.",
  "MissingTimelineRecordId": "Can't update timeline record, timeline record id is not provided.",
  "ModifyingCoberturaIndexFile": "Modifying Cobertura Index file",
  "N": "N",
  "NameRequiredForTimelineRecord": "Name is required for this new timeline record.",
  "NeedAdminForConfigAgentWinService": "Needs Administrator privileges for configuring agent as windows service.",
  "NeedAdminForUnconfigWinServiceAgent": "Needs Administrator privileges for unconfiguring agent that running as windows service.",
  "NetworkServiceNotFound": "Cannot find network service account",
  "NoArtifactsFound": "No artifacts are available in the version '{0}'. Make sure that an artifact is published with the version and try again.",
  "NoSpaceOnDisk": "Skipping attachment as it exceeded the maximum allowed size or not available on disk: {0}",
  "NotLinux": "This Agent version is built for Linux. Please install a correct build for your OS.",
  "NotOSX": "This Agent version is built for OSX. Please install a correct build for your OS.",
  "NotWindows": "This Agent version is built for Windows. Please install a correct build for your OS.",
  "OperationFailed": "Error: Operation {0} failed with return code {1}",
  "ParentTimelineNotCreated": "Parent timeline record has not been created for this new timeline record.",
  "Password": "password",
  "PathNotExist": "Path not exist: {0}",
  "PersonalAccessToken": "personal access token",
  "PlatformNotSupport": "Running the agent on this platform is not supported. The current platform is {0} and it was built for {1}.",
  "PoolNotFound": "Agent pool not found: '{0}'",
  "PostJob": "Post-job: {0}",
  "PowerShellNotInstalledMinVersion0": "PowerShell is not installed. Minimum required version: {0}",
  "PreJob": "Pre-job: {0}",
  "PrepareBuildDir": "Prepare build directory.",
  "PrepareReleasesDir": "Prepare release directory.",
  "PrepareTaskExecutionHandler": "Preparing task execution handler.",
  "Prepending0WithDirectoryContaining1": "Prepending {0} environment variable with directory containing '{1}'.",
  "PrerequisitesSectionHeader": "Prerequisites",
  "ProcessCompletedWithCode0Errors1": "Process completed with exit code {0} and had {1} error(s) written to the error stream.",
  "ProcessCompletedWithExitCode0": "Process completed with exit code {0}.",
  "ProcessExitCode": "Exit code {0} returned from process: file name '{1}', arguments '{2}'.",
  "ProjectName": "Project name",
  "Prompt0": "Enter {0}",
  "Prompt0Default1": "Enter {0} (press enter for {1})",
  "PSScriptError": "PowerShell script completed with {0} errors.",
  "PublishCodeCoverage": "Publish code coverage",
  "PublishedCodeCoverageArtifact": "Published '{0}' as artifact '{1}'",
  "PublishingCodeCoverage": "Publishing coverage summary data to TFS server.",
  "PublishingCodeCoverageFiles": "Publishing code coverage files to TFS server.",
  "PublishingTestResults": "Publishing test results to test run '{0}'",
  "PublishTestResults": "Publish test results",
  "QueryingWorkspaceInfo": "Querying workspace information.",
  "QueueConError": "{0:u}: Agent connect error: {1}. Retrying every {2} seconds until reconnected.",
  "QueueConnected": "{0:u}: Agent reconnected.",
  "ReadingCodeCoverageSummary": "Reading code coverage summary from '{0}'",
  "RegisterAgentSectionHeader": "Register Agent",
  "RenameIndexFileCoberturaFailed": "Renaming '{0}' to '{1}' failed while publishing code coverage files for '{2}'. Inner Exception: '{3}'",
  "Replace": "replace? (Y/N)",
  "ResultsCommandNotFound": "##vso[results.{0}] is not a recognized command for Task command extension. TODO: DOC aka link",
  "RetryingRMArtifactCleanUp": "Failed to cleanup Release's artifact directory '{0}' with an exception {1}. Retrying the cleanup of Release artifact directory.",
  "RMArtifactContainerDetailsInvaidError": "The artifact does not have valid container details: {0}",
  "RMArtifactContainerDetailsNotFoundError": "The artifact does not contain container details: {0}",
  "RMArtifactDetailsIncomplete": "Cannot find the required information to download the artifact",
  "RMArtifactDirectoryNotFoundError": "The artifact directory does not exist: {0}. It can happen if the password of the account {1} is changed recently and is not updated for the agent. If this is the case, please consider re-configuring the agent.",
  "RMArtifactDownloadBegin": "Downloading linked artifact {0} of type {1}...",
  "RMArtifactDownloadFinished": "Downloaded linked artifact {0}",
  "RMArtifactDownloadRequestCreationFailed": "Failed to create request to download artifact from URL: {0}",
  "RMArtifactEmpty": "Artifact does not contain any files to download.",
  "RMArtifactMatchNotFound": "The build artifact '{0}' does not match any naming patterns, skipping download",
  "RMArtifactNameDirectoryNotFound": "Directory '{0}' does not exist. Falling back to parent directory: {1}",
  "RMArtifactsDownloadFinished": "Finished artifacts download",
  "RMArtifactTypeNotSupported": "Release management does not support download of artifact type {0} in the current version",
  "RMArtifactVersionNotBelongToArtifactSource": "The artifact version with ID {0} does not belong to the linked artifact source with ID {1}.",
  "RMCachingAllItems": "Caching all items in the file container...",
  "RMCachingComplete": "Caching complete. ({0} ms)",
  "RMCachingContainerItems": "Caching items under '{0}' in the file container...",
  "RMCleanedUpArtifactsDirectory": "Cleaned artifacts directory: {0}",
  "RMCleaningArtifactsDirectory": "Cleaning artifacts directory: {0}",
  "RMContainerItemNotSupported": "Container Item type '{0}' not supported.",
  "RMContainerItemPathDoesnotExist": "File container item path doesn't start with {0}: {1}",
  "RMContainerItemRequestTimedOut": "Request timed out after {0} seconds; sleeping for {1} seconds and attempting again. Request: {2} {3}",
  "RMCopyingFile": "[File] {0} => {1}",
  "RMCustomEndpointNotFound": "Cannot find required information in the job to download the Custom artifact: {0}",
  "RMDownloadArtifactUnexpectedError": "Unexpected error occurred while downloading artifacts",
  "RMDownloadComplete": "Download complete.",
  "RMDownloadingArtifactFromFileShare": "Downloading artifact from file share: {0}",
  "RMDownloadingJenkinsArtifacts": "Downloading the artifacts from Jenkins server",
  "RMDownloadProgress": "{0} placed file(s): {1} downloaded, {2} empty",
  "RMDownloadProgressDetails": "{0} MB downloaded at {1} KB/sec. Download time: {2}. Parallel download limit: {3}.",
  "RMDownloadTaskCompletedStatus": "No download tasks have completed in {0} minutes. Remaining task statuses:",
  "RMDownloadTaskStates": " {0}: \t{1} task(s).",
  "RMEnsureArtifactFolderExistsAndIsClean": "Ensuring artifact folder {0} exists and is clean.",
  "RMEnvironmentVariablesAvailable": "Environment variables available are below.  Note that these environment variables can be referred to in the task (in the ReleaseDefinition) by replacing \"_\" with \".\" e.g. AGENT_NAME environment variable can be referenced using Agent.Name in the ReleaseDefinition: {0}",
  "RMErrorDownloadingContainerItem": "Error downloading {0}: {1}",
  "RMErrorDuringArtifactDownload": "An error occurred during download: {0}",
  "RMFileShareArtifactErrorOnNonWindowsAgent": "Cannot download artifacts from a file share using OSX or Linux agent. You can download artifact from server or use a Windows agent.",
  "RMGetFileAsyncTimedOut": "FetchEngine.GetFileAsync task timed out after {0} minute(s).",
  "RMGitEndpointNotFound": "Cannot find required information in the job to download the Team Foundation Git artifact.",
  "RMGitHubEndpointNotFound": "Cannot find required information in the job to download the GitHub artifact: {0}",
  "RMGotJenkinsArtifactDetails": "Received Jenkins Artifact Details",
  "RMJenkinsBuildId": "BuildId: {0}",
  "RMJenkinsEndpointNotFound": "Cannot find required information in the job to download the Jenkins artifact: {0}",
  "RMJenkinsJobName": "Job Name: {0}",
  "RMNoArtifactsFound": "No artifact found with relative path: '{0}'",
  "RMNoBuildArtifactsFound": "No artifacts are available in the build {0}. Make sure that the build is publishing an artifact and try again",
  "RMPrepareToGetFromJenkinsServer": "Preparing to get artifacts info from Jenkins server",
  "RMPreparingToDownload": "Preparing to download artifact: {0}",
  "RMPreparingToGetBuildArtifactList": "Preparing to get the list of available artifacts from build",
  "RMReAttemptingDownloadOfContainerItem": "Re-attempting download of {0}. Error: {1}",
  "RMReceivedGithubArtifactDetails": "Received GitHub artifact Details",
  "RMRemainingDownloads": "{0} downloads remaining.",
  "RMRetryingArtifactDownload": "Retrying download...",
  "RMStartArtifactsDownload": "Starting artifacts download...",
  "RMStreamTypeNotSupported": "Release management does not support download of stream type {0} in the current version",
  "RMTfsVCEndpointNotFound": "Cannot find required information in the job to download the Team Foundation Version Control artifact.",
  "RMUserChoseToSkipArtifactDownload": "Skipping artifact download based on the setting specified.",
  "RSAKeyFileNotFound": "RSA key file {0} was not found",
  "RunAgentAsServiceDescription": "run agent as service? (Y/N)",
  "RunningJob": "{0:u}: Running job: {1}",
  "SavedSettings": "{0:u}: Settings Saved.",
  "ScanToolCapabilities": "Scanning for tool capabilities.",
  "SelfManageGitCreds": "You are in self manage git creds mode. Make sure your agent host machine can bypass any git authentication challenge.",
  "ServerTarpit": "The job is currently being throttled by the server. You may experience delays in console line output, job status reporting, and task log uploads.",
  "ServerUrl": "server URL",
  "ServiceAlreadyExists": "The service already exists: {0}, it will be replaced",
  "ServiceConfigured": "Service {0} successfully configured",
  "ServiceInstalled": "Service {0} successfully installed",
  "ServiceRecoveryOptionSet": "Service {0} successfully set recovery option",
  "ServiceStartedSuccessfully": "Service {0} started successfully",
  "SessionCreateFailed": "Failed to create session. {0}",
  "SessionExist": "A session for this agent already exists.",
  "SessionExistStopRetry": "Stop retry on SessionConflictException after retried for {0} seconds.",
  "SetBuildVars": "Set build variables.",
  "ShallowCheckoutFail": "Git checkout failed on shallow repository, this might because of git fetch with depth '{0}' doesn't include the checkout commit '{1}'. Please reference documentaion (http://go.microsoft.com/fwlink/?LinkId=829603)",
  "Skipping": "Does not exist. Skipping ",
  "SourceArtifactProviderNotFound": "Can not find source provider for artifact of type {0}",
  "SourceDirectoriesNotSpecified": "Source directories field is not specified. Specify valid source directories for code coverage reports to include highlighted source code and try again.",
  "SourceDirectoriesNotSpecifiedForMultiModule": "Source directories field is not specified. Source directories field is required for a multi module project for code coverage reports to include highlighted source code.",
  "StartMaintenance": "Start maintenance: {0}",
  "StepFinishing": "Finishing: {0}",
  "StepStarting": "Starting: {0}",
  "StepTimedOut": "The task has timed out.",
  "Success": "Succeeded: ",
  "SupportedRepositoryEndpointNotFound": "Unable to match any source repository endpoints with any of the supported source providers.",
  "SupportedTaskHandlerNotFound": "A supported task execution handler was not found. This error usually means the task does not carry an implementation that is compatible with your current operating system. Contact the task author for more details.",
  "SvnBranchCheckedOut": "Checked out branch {0} for repository {1} at revision {2}",
  "SvnEmptyServerPath": "The empty relative server path is mapped to '{0}'.",
  "SvnFileAlreadyExists": "The file {0} already exists",
  "SvnIncorrectRelativePath": "Incorrect relative path '{0}' specified.",
  "SvnMappingDuplicateLocal": "Ignoring duplicate mapping for local path={0}",
  "SvnMappingDuplicateServer": "Ignoring duplicate mapping for server path={0}",
  "SvnMappingIgnored": "The entire mapping set is ignored. Proceeding with the full branch mapping.",
  "SvnNotInstalled": "Can't find installed svn command line utility",
  "SvnSyncingRepo": "Syncing repository: {0} (Svn)",
  "TaskCommandNotFound": "##vso[task.{0}] is not a recognized command for Task command extension. Please reference documentaion (http://go.microsoft.com/fwlink/?LinkId=817296)",
  "TeeEula": [
    "Building sources from a TFVC repository requires accepting the Team Explorer Everywhere End User License Agreement. This step is not required for building sources from Git repositories.",
    "",
    "A copy of the Team Explorer Everywhere license agreement can be found at:",
    "  {0}"
  ],
  "TestAgentConnection": "Testing agent connection.",
  "TestResultsRemaining": "Test results remaining: {0}. Test run id: {1}",
  "Tfs2015NotSupported": "This agent is not supported on Windows against TFS 2015. The TFS 2015 Windows agent can be downloaded from the agent pools administration page.",
  "TotalThrottlingDelay": "The job has experienced {0} seconds total delay caused by server throttling.",
  "TotalUploadFiles": "Uploading {0} files",
  "TypeRequiredForTimelineRecord": "Type is required for this new timeline record.",
  "UnableResolveArtifactType": "Can't infer artifact type from artifact location: {0}.",
  "UnableToArchiveResults": "Unable to archive the test results: {0}",
  "UnableToParseBuildTrackingConfig0": "Unable to parse the legacy build tracking configuration. A new build directory will be created instead. The previous directory may be left in an unreclaimed state. Legacy configuration contents: {0}",
  "UnconfigureOSXService": "Unconfigure service first according to https://www.visualstudio.com/en-us/docs/build/admin/agents/v2-osx",
  "UnconfigureServiceDService": "Unconfigure service first according to https://www.visualstudio.com/en-us/docs/build/admin/agents/v2-linux",
  "UninstallingService": "Removing service",
  "UnknownCodeCoverageTool": "Code coverage tool '{0}' is not supported.",
  "UnrecognizedCmdArgs": "Unrecognized command-line input arguments: '{0}'. For usage refer to: .\\config.cmd --help or ./config.sh --help",
  "UnregisteringAgent": "Removing agent from the server",
  "UpdateBuildNumber": "Update Build Number",
  "UpdateBuildNumberForBuild": "Update build number to {0} for build {1}",
  "UpdateInProgress": "Agent update in progress, do not shutdown agent.",
  "UpgradeToLatestGit": "In order to get better Git experience, upgrade your Git to at least version '{0}', your current git version is '{1}'.",
  "UploadArtifact": "Upload Artifact",
  "UploadToFileContainer": "Upload '{0}' to file container: '{1}'",
  "UserName": "user name",
  "Variable0ContainsCyclicalReference": "Unable to expand variable '{0}'. A cyclical reference was detected.",
  "Variable0ExceedsMaxDepth1": "Unable to expand variable '{0}'. The max expansion depth ({1}) was exceeded.",
  "VSTSHostNonZeroReturn": "LegacyVSTSPowerShellHost.exe completed with return code: {0}.",
  "WaitForServiceToStop": "Waiting for service to stop...",
  "WindowsLogonAccountNameDescription": "User account to use for the service",
  "WindowsLogonPasswordDescription": "Password for the account {0}",
  "WorkFolderDescription": "work folder",
  "Y": "Y"
}